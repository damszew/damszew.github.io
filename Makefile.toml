[env]
PORT = "8000"

# ---- BUILD & CREATE WASMS ----
[tasks.compile]
description = "Build"
command = "cargo"
args = ["build"]

[tasks.compile_release]
description = "Build, with the --release flag"
command = "cargo"
args = ["build", "--release"]

[tasks.create_wasm]
description = "Build with wasm-pack"
install_crate = { crate_name = "wasm-pack", binary = "wasm-pack", test_arg = "-V", min_version = "0.8.0" }
command = "wasm-pack"
args = ["build", "--target", "web", "--out-name", "package", "--dev"]

[tasks.create_wasm_release]
description = "Build with wasm-pack"
install_crate = { crate_name = "wasm-pack", binary = "wasm-pack", test_arg = "-V", min_version = "0.8.0" }
command = "wasm-pack"
args = ["build", "--target", "web", "--out-name", "package", "--release"]

[tasks.build]
description = "Build, and create wasms"
dependencies = ["compile", "create_wasm"]

[tasks.build_release]
description = "Build, and create wasms, with the release flag"
dependencies = ["compile_release", "create_wasm_release"]

[tasks.watch]
description = "Build, create wasms, and watch/recompile files for changes"
dependencies = ["build", "create_wasm"]
watch = { ignore_pattern = "pkg/*" }

[tasks.serve]
description = "Start server"
install_crate = { crate_name = "microserver", binary = "microserver", test_arg = "-h" }
command = "microserver"
args = ["--port", "${PORT}"]

# ---- LINT ----

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.clippy]
description = "Lint with Clippy"
install_crate = { rustup_component_name = "clippy", binary = "cargo-clippy", test_arg = "--version" }
dependencies = ["clean"]
command = "cargo"
args = ["clippy", "--all-features", "--", "--deny", "warnings"]

[tasks.fmt]
description = "Format with rustfmt"
install_crate = { rustup_component_name = "rustfmt", binary = "cargo-fmt", test_arg = "--version" }
command = "cargo"
args = ["fmt", "--all", "--", "--check"]


# ---- TEST ----

[tasks.test]
description = "Run tests. Ex: 'cargo make test firefox'. Test envs: [chrome, firefox, safari]"
install_crate = { crate_name = "wasm-pack", binary = "wasm-pack", test_arg = "-V", min_version = "0.8.0" }
command = "wasm-pack"
args = ["test", "--${@}"]

[tasks.test_release]
extend = "test"
description = "Run tests in release mode. Ex: 'cargo make test firefox'. Test envs: [chrome, firefox, safari]"
args = ["test", "--${@}", "--release"]

[tasks.test_h]
description = "Run headless tests. Ex: 'cargo make test_h firefox'. Test envs: [chrome, firefox, safari]"
extend = "test"
args = ["test", "--headless", "--${@}"]

[tasks.test_h_release]
extend = "test_h"
description = "Run headless tests in release mode. Ex: 'cargo make test_h firefox'. Test envs: [chrome, firefox, safari]"
args = ["test", "--headless", "--${@}", "--release"]

# ---- DEPLOY ----

[tasks.deploy]
description = "Build wasm in release mode and together with index.html and static dir copy it to ${1}"
dependencies = ["clean", "build_release"]
script = [
    "rm -rf ${1}/",
    "mkdir -p ${1}",
    "cp -r index.html static/ ${1}",
    "rm pkg/.gitignore",
    "mv pkg/ ${1}",
]
